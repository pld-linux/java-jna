--- jna-5.6.0/src/com/sun/jna/NativeLibrary.java.orig	2023-02-03 16:12:04.261810212 +0100
+++ jna-5.6.0/src/com/sun/jna/NativeLibrary.java	2023-02-03 16:18:25.517413974 +0100
@@ -903,6 +903,9 @@ public class NativeLibrary {
             //
             if (Platform.isLinux() || Platform.isSolaris()
                 || Platform.isFreeBSD() || Platform.iskFreeBSD()) {
+                if (Platform.isLinux() && Platform.ARCH.equals("x32"))
+                    archPath = "x32";
+                else
                 // Linux & FreeBSD use /usr/lib32, solaris uses /usr/lib/32
                 archPath = (Platform.isSolaris() ? "/" : "") + Native.POINTER_SIZE * 8;
             }
--- jna-5.6.0/src/com/sun/jna/Platform.java.orig	2023-02-03 16:12:04.262811012 +0100
+++ jna-5.6.0/src/com/sun/jna/Platform.java	2023-02-03 16:19:26.593247233 +0100
@@ -233,6 +233,10 @@ public final class Platform {
         return false;
     }
 
+    public static final boolean isX32() {
+        return ARCH.startsWith("x32");
+    }
+
     static String getCanonicalArchitecture(String arch, int platform) {
         arch = arch.toLowerCase().trim();
         if ("powerpc".equals(arch)) {
--- jna-5.6.0/src/com/sun/jna/Native.java.orig	2023-02-03 16:12:04.266143327 +0100
+++ jna-5.6.0/src/com/sun/jna/Native.java	2023-02-03 16:21:28.159753425 +0100
@@ -224,7 +224,7 @@ public final class Native implements Ver
             setProtected(true);
         }
         MAX_ALIGNMENT = Platform.isSPARC() || Platform.isWindows()
-            || (Platform.isLinux() && (Platform.isARM() || Platform.isPPC() || Platform.isMIPS()))
+            || (Platform.isLinux() && (Platform.isARM() || Platform.isPPC() || Platform.isMIPS()) || Platform.isX32())
             || Platform.isAIX()
             || (Platform.isAndroid() && !Platform.isIntel())
             ? 8 : LONG_SIZE;
